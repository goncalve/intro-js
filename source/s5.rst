:tocdepth: 3

.. include:: common.rst.inc

L'API Canvas
============

Principe
++++++++

Canvas et contexte
------------------

La balise ``<canvas>`` de HTML5 crée un élément vide,
que le code Javascript peut piloter pour créer des images.

Pour pouvoir piloter un canvas,
il faut d'abord récupérer un objet *contexte* :

.. code-block:: javascript

  var canvas = document.querySelector('canvas');
  var ctx = canvas.getContext('2d');

Différents contextes
--------------------

* ``2d`` permet de génerer des images 2D
* ``webgl`` permet de génerer des images 3D en utilisant le GPU
  (cf. http://webgl.org/)
* d'autres contextes peuvent apparaître à l'avenir

Tutoriel
--------

https://developer.mozilla.org/fr/docs/Tutoriel_canvas/Formes_g%C3%A9om%C3%A9triques

Projet
++++++

Votre travail
-------------

* Écrivez une application de dessin en utilisant ``canvas`` et le contexte ``2d``.

* Il pourra être nécessaire d'utiliser les événements ``mousedown``, ``mousemove`` et ``mouseup``.

* Ces événements ont notamment deux attributs ``pageX`` et ``pageY`` indiquant les coordonnées de la souris dans la *page*,
  à comparer avec les coordonnées de l'élément: ``canvas.offsetLeft`` et ``cancas.offsetTop``.

Pour aller plus loin
++++++++++++++++++++

Autres utilisation
------------------

* Un canvas transparent peut être positionné par dessus d'autres éléments
  (avec une utilisation judicieuse du CSS).
  
* Le contexte ``2d`` peut également faire une "photographie" d'un élément graphiqe
  (image, vidéo, autre canvas) de la page à l'aide de la méthode drawImage_.

.. _drawImage: http://devdocs.io/dom/canvasrenderingcontext2d/drawimage

Autres manières de gérer le graphisme
-------------------------------------

Une alternative aux Canvas est SVG (*Standard Vector Graphics*),
un langage à balise similaire à HTML mais servant à décrire des images.

Ce langage est intégré à HTML5 et peut notamment être manipulé dans l'arbre DOM par du code Javascript.

Exemple :

.. code-block:: xml

   <svg>
     <rect x="10" y="10" width="20" height="20"
           stroke="red" fill="lightYellow"></rect>
     <rect x="50" y="10" width="20" height="20"
           stroke="blue" fill="lightGreen"></rect>
   </svg>

.. raw:: html

   <svg>
     <rect x="10" y="10" width="20" height="20"
           stroke="red" fill="lightYellow"></rect>
     <rect x="50" y="10" width="20" height="20"
           stroke="blue" fill="lightGreen"></rect>
   </svg>
